<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- /properties/dao/dao.xml The configuration file for Data Access Object. 
		This file should not be modified but by the developers. This file is referenced 
		by /properties/applicationContext.xml. -->

	<!-- PersistenceAnnotationBeanPostProcessor looks for @PersistenceContext 
		to set entity manager in dao -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="#{ systemProperties[generateDdl]?:false }" />
				<!-- <property name="database" value="HSQL" /> -->
				<property name="database" value="MYSQL" />
			</bean>
		</property>
		<property name="persistenceXmlLocation" value="classpath:/properties/dao/persistence.xml" />
		<property name="jpaProperties" ref="jpaProperties" />
	</bean>


	<!-- http://stackoverflow.com/questions/3731016/multiple-entity-manager-issue-in-spring-when-using-more-than-one-datasource -->
<!-- 	<bean id="persistenceUnitManager" -->
<!-- 		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager"> -->
<!-- 		<property name="persistenceXmlLocations"> -->
<!-- 			<list> -->
<!-- 				<value>classpath:/properties/dao/persistence.xml</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 		<property name="dataSources"> -->
<!-- 			<map> -->
<!-- 				<entry key="dataSource" value-ref="dataSource" /> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 		<property name="defaultDataSource" ref="dataSource" /> -->
<!-- 	</bean> -->


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${hibernate.connection.driver_class}" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="100" />
		<property name="url" value="${hibernate.connection.jdbc.url}" />
		<property name="username" value="${hibernate.connection.jdbc.username}" />
		<property name="password" value="${hibernate.connection.jdbc.password}" />
	</bean>

	<util:properties id="jpaProperties">
		<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
		<prop key="hibernate.cache.use_query_cache">false</prop>
		<prop key="hibernate.cache.use_second_level_cache">false</prop>
	</util:properties>


	<bean id="daoService" class="org.esupportail.example.dao.JPADaoServiceImpl"
		lazy-init="true">
		<description>
			This bean is the DAO service, the interface used by the
			domain service to access
			the database. It must implement interface
			org.esupportail.example.dao.DaoService.
		</description>
	</bean>

</beans>
